# minimax_ttt.py
import math
def best_move(board, player):
    opponent = 'O' if player=='X' else 'X'
    def winner(b):
        wins=[(0,1,2),(3,4,5),(6,7,8),(0,3,6),(1,4,7),(2,5,8),(0,4,8),(2,4,6)]
        for a,b,c in wins:
            if board[a]==board[b]==board[c] and board[a] != ' ': return board[a]
        return None
    def minimax(b, turn):
        w = winner(b)
        if w=='X': return 1
        if w=='O': return -1
        if all(s!=' ' for s in b): return 0
        scores=[]
        for i in range(9):
            if b[i]==' ':
                b[i]=turn
                scores.append(minimax(b, 'O' if turn=='X' else 'X'))
                b[i]=' '
        return max(scores) if turn==player else min(scores)
    bestScore=-math.inf; move=None
    for i in range(9):
        if board[i]==' ':
            board[i]=player
            score=minimax(board, opponent)
            board[i]=' '
            if score>bestScore:
                bestScore=score; move=i
    return move

# Example
board=[' ']*9
# let AI be 'X'
print(best_move(board,'X'))
